{
 "Resources": {
  "daedalusclusterKubectlHandlerRole2123EAA4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     },
     {
      "Fn::If": [
       "daedalusclusterHasEcrPublicDAFD3D37",
       {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly"
         ]
        ]
       },
       {
        "Ref": "AWS::NoValue"
       }
      ]
     }
    ],
    "Tags": [
     {
      "Key": "application",
      "Value": "daedalus"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/KubectlHandlerRole/Resource"
   }
  },
  "daedalusclusterKubectlHandlerRoleDefaultPolicy8BE465F8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "eks:DescribeCluster",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "daedaluscluster58344A8D",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "daedalusclusterCreationRoleF03E6791",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "daedalusclusterKubectlHandlerRoleDefaultPolicy8BE465F8",
    "Roles": [
     {
      "Ref": "daedalusclusterKubectlHandlerRole2123EAA4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/KubectlHandlerRole/DefaultPolicy/Resource"
   }
  },
  "daedalusclusterRole6DF5D650": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "eks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSClusterPolicy"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "application",
      "Value": "daedalus"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/Role/Resource"
   }
  },
  "daedalusclusterControlPlaneSecurityGroup8543B195": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EKS Control Plane Security Group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "application",
      "Value": "daedalus"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpc6EC2CB49A2DBA358"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/ControlPlaneSecurityGroup/Resource"
   }
  },
  "daedalusclusterCreationRoleF03E6791": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": [
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.DaedalusClusterStackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole63BB5926Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.DaedalusClusterStackawscdkawseksClusterResourceProviderOnEventHandlerServiceRole1153D2C0Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "daedalusclusterKubectlHandlerRole2123EAA4",
           "Arn"
          ]
         }
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "application",
      "Value": "daedalus"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/Resource/CreationRole/Resource"
   }
  },
  "daedalusclusterCreationRoleDefaultPolicy7C47C07B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "daedalusclusterRole6DF5D650",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "eks:CreateCluster",
        "eks:CreateFargateProfile",
        "eks:DeleteCluster",
        "eks:DescribeCluster",
        "eks:DescribeUpdate",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:UpdateClusterConfig",
        "eks:UpdateClusterVersion"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:eks:ap-northeast-1:869229378759:cluster/daedalus-cluster",
        "arn:aws:eks:ap-northeast-1:869229378759:cluster/daedalus-cluster/*"
       ]
      },
      {
       "Action": [
        "eks:DeleteFargateProfile",
        "eks:DescribeFargateProfile"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:eks:ap-northeast-1:869229378759:fargateprofile/daedalus-cluster/*"
      },
      {
       "Action": [
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "iam:CreateServiceLinkedRole",
        "iam:GetRole",
        "iam:listAttachedRolePolicies"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "daedalusclusterCreationRoleDefaultPolicy7C47C07B",
    "Roles": [
     {
      "Ref": "daedalusclusterCreationRoleF03E6791"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/Resource/CreationRole/DefaultPolicy/Resource"
   }
  },
  "daedaluscluster58344A8D": {
   "Type": "Custom::AWSCDK-EKS-Cluster",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
      "Outputs.DaedalusClusterStackawscdkawseksClusterResourceProviderframeworkonEvent5FD2A3B5Arn"
     ]
    },
    "Config": {
     "name": "daedalus-cluster",
     "version": "1.27",
     "roleArn": {
      "Fn::GetAtt": [
       "daedalusclusterRole6DF5D650",
       "Arn"
      ]
     },
     "kubernetesNetworkConfig": {
      "ipFamily": "ipv4"
     },
     "resourcesVpcConfig": {
      "subnetIds": [
       {
        "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpcdaedalusprivatesubnetSubnet1Subnet960B7401669CE4C1"
       },
       {
        "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpcdaedalusprivatesubnetSubnet2Subnet6322CE2B8DF22DD9"
       }
      ],
      "securityGroupIds": [
       {
        "Fn::GetAtt": [
         "daedalusclusterControlPlaneSecurityGroup8543B195",
         "GroupId"
        ]
       }
      ],
      "endpointPublicAccess": true,
      "endpointPrivateAccess": true
     }
    },
    "AssumeRoleArn": {
     "Fn::GetAtt": [
      "daedalusclusterCreationRoleF03E6791",
      "Arn"
     ]
    },
    "AttributesRevision": 2
   },
   "DependsOn": [
    "daedalusclusterCreationRoleDefaultPolicy7C47C07B",
    "daedalusclusterCreationRoleF03E6791"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/Resource/Resource/Default"
   }
  },
  "daedalusclusterKubectlReadyBarrierEA92B5A9": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "aws:cdk:eks:kubectl-ready"
   },
   "DependsOn": [
    "daedalusclusterCreationRoleDefaultPolicy7C47C07B",
    "daedalusclusterCreationRoleF03E6791",
    "daedaluscluster58344A8D"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/KubectlReadyBarrier"
   }
  },
  "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A": {
   "Type": "AWS::EKS::Nodegroup",
   "Properties": {
    "AmiType": "AL2_x86_64",
    "CapacityType": "ON_DEMAND",
    "ClusterName": {
     "Ref": "daedaluscluster58344A8D"
    },
    "ForceUpdateEnabled": true,
    "InstanceTypes": [
     "t2.nano"
    ],
    "NodeRole": {
     "Fn::GetAtt": [
      "daedalusclusternodegrouprole51C95FBC",
      "Arn"
     ]
    },
    "ScalingConfig": {
     "DesiredSize": 1,
     "MaxSize": 2,
     "MinSize": 1
    },
    "Subnets": [
     {
      "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpcdaedalusprivatesubnetSubnet1Subnet960B7401669CE4C1"
     },
     {
      "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpcdaedalusprivatesubnetSubnet2Subnet6322CE2B8DF22DD9"
     }
    ],
    "Tags": {
     "application": "daedalus"
    }
   },
   "DependsOn": [
    "daedalusclusterAwsAuthmanifest3B26FEF7",
    "daedalusclusterControlPlaneSecurityGroup8543B195",
    "daedalusclusterKubectlHandlerRoleDefaultPolicy8BE465F8",
    "daedalusclusterKubectlHandlerRole2123EAA4",
    "daedalusclusterKubectlReadyBarrierEA92B5A9",
    "daedalusclusterOpenIdConnectProviderE29A9BB1",
    "daedalusclusterCreationRoleDefaultPolicy7C47C07B",
    "daedalusclusterCreationRoleF03E6791",
    "daedaluscluster58344A8D",
    "daedalusclusterRole6DF5D650"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/Nodegroupdaedalus-cluster-nodegroup/Resource"
   }
  },
  "daedalusclusterAwsAuthmanifest3B26FEF7": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.DaedalusClusterStackawscdkawseksKubectlProviderframeworkonEvent0A8334C7Arn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8bcff416fc8228515e9669875b8823d2aecb57609\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "daedalusclusternodegrouprole51C95FBC",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "eksadminrole7E2DE206",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"",
       {
        "Fn::GetAtt": [
         "eksadminrole7E2DE206",
         "Arn"
        ]
       },
       "\\\",\\\"groups\\\":[\\\"system:masters\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "daedaluscluster58344A8D"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "daedalusclusterCreationRoleF03E6791",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8bcff416fc8228515e9669875b8823d2aecb57609",
    "Overwrite": true
   },
   "DependsOn": [
    "daedalusclusterKubectlReadyBarrierEA92B5A9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/AwsAuth/manifest/Resource/Default"
   }
  },
  "daedalusclusterOpenIdConnectProviderE29A9BB1": {
   "Type": "Custom::AWSCDKOpenIdConnectProvider",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
      "Arn"
     ]
    },
    "ClientIDList": [
     "sts.amazonaws.com"
    ],
    "Url": {
     "Fn::GetAtt": [
      "daedaluscluster58344A8D",
      "OpenIdConnectIssuerUrl"
     ]
    },
    "CodeHash": "a3f66c60067b06b5d9d00094e9e817ee39dd7cb5c315c8c254f5f3c571959ce5"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster/OpenIdConnectProvider/Resource/Default"
   }
  },
  "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.ap-northeast-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-869229378759-ap-northeast-1/5e1e888d739508aab9c2befc89d70f43cfd39d81f3d909bd95680b30d4d6e046.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
    "aws:asset:path": "DaedalusClusterStackawscdkawseksClusterResourceProvider3FD5A196.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "Parameters": {
     "referencetoDaedalusClusterStackdaedalusclusterKubectlHandlerRoleE23C01FCArn": {
      "Fn::GetAtt": [
       "daedalusclusterKubectlHandlerRole2123EAA4",
       "Arn"
      ]
     },
     "referencetoDaedalusClusterStackdaedalusclusterD2366E44ClusterSecurityGroupId": {
      "Fn::GetAtt": [
       "daedaluscluster58344A8D",
       "ClusterSecurityGroupId"
      ]
     }
    },
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.ap-northeast-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-869229378759-ap-northeast-1/07d6ecda83477da9d1c6ffa757e0499ea131a342a0d69b78b8d78f022e2eac09.json"
      ]
     ]
    }
   },
   "DependsOn": [
    "daedalusclusterKubectlHandlerRoleDefaultPolicy8BE465F8",
    "daedalusclusterKubectlHandlerRole2123EAA4"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
    "aws:asset:path": "DaedalusClusterStackawscdkawseksKubectlProviderC062588E.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "daedalusclusternodegrouprole51C95FBC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-nodegroup-role/Resource"
   }
  },
  "daedalusclusteralbcontrolleralbsaConditionJson66A86DA4": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "daedalusclusterOpenIdConnectProviderE29A9BB1"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "daedalusclusterOpenIdConnectProviderE29A9BB1"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-albcontroller/alb-sa/ConditionJson/Resource/Default"
   }
  },
  "daedalusclusteralbcontrolleralbsaRoleCEFEFCEF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "daedalusclusteralbcontrolleralbsaConditionJson66A86DA4",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "daedalusclusterOpenIdConnectProviderE29A9BB1"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "application",
      "Value": "daedalus"
     }
    ]
   },
   "DependsOn": [
    "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-albcontroller/alb-sa/Role/Resource"
   }
  },
  "daedalusclusteralbcontrolleralbsaRoleDefaultPolicyDE1644B1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:CreateServiceLinkedRole",
       "Condition": {
        "StringEquals": {
         "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "acm:DescribeCertificate",
        "acm:ListCertificates",
        "cognito-idp:DescribeUserPoolClient",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:CreateSecurityGroup",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeCoipPools",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:GetCoipPoolUsage",
        "ec2:RevokeSecurityGroupIngress",
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:SetWebAcl",
        "iam:GetServerCertificate",
        "iam:ListServerCertificates",
        "shield:CreateProtection",
        "shield:DeleteProtection",
        "shield:DescribeProtection",
        "shield:GetSubscriptionState",
        "waf-regional:AssociateWebACL",
        "waf-regional:DisassociateWebACL",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource",
        "wafv2:AssociateWebACL",
        "wafv2:DisassociateWebACL",
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ec2:CreateTags",
       "Condition": {
        "StringEquals": {
         "ec2:CreateAction": "CreateSecurityGroup"
        },
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "arn:aws:ec2:*:*:security-group/*"
      },
      {
       "Action": [
        "ec2:CreateTags",
        "ec2:DeleteTags"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "arn:aws:ec2:*:*:security-group/*"
      },
      {
       "Action": [
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:DeleteSecurityGroup",
        "ec2:RevokeSecurityGroupIngress",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets"
       ],
       "Condition": {
        "Null": {
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateTargetGroup"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:RemoveTags"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": [
        "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
        "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
        "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
       ]
      },
      {
       "Action": [
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:RemoveTags"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
        "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
        "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
        "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
       ]
      },
      {
       "Action": "elasticloadbalancing:AddTags",
       "Condition": {
        "StringEquals": {
         "elasticloadbalancing:CreateAction": [
          "CreateTargetGroup",
          "CreateLoadBalancer"
         ]
        },
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": [
        "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
        "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
        "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
       ]
      },
      {
       "Action": [
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:RegisterTargets"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "daedalusclusteralbcontrolleralbsaRoleDefaultPolicyDE1644B1",
    "Roles": [
     {
      "Ref": "daedalusclusteralbcontrolleralbsaRoleCEFEFCEF"
     }
    ]
   },
   "DependsOn": [
    "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-albcontroller/alb-sa/Role/DefaultPolicy/Resource"
   }
  },
  "daedalusclusteralbcontrolleralbsamanifestalbsaServiceAccountResourceE6C947CA": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.DaedalusClusterStackawscdkawseksKubectlProviderframeworkonEvent0A8334C7Arn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8b91717141cb50c40afed6ace11c97e5b43374a73\":\"\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "daedalusclusteralbcontrolleralbsaRoleCEFEFCEF",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "daedaluscluster58344A8D"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "daedalusclusterCreationRoleF03E6791",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8b91717141cb50c40afed6ace11c97e5b43374a73"
   },
   "DependsOn": [
    "daedalusclusterKubectlReadyBarrierEA92B5A9",
    "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-albcontroller/alb-sa/manifest-alb-saServiceAccountResource/Resource/Default"
   }
  },
  "daedalusclusteralbcontroller0901DD26": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.DaedalusClusterStackawscdkawseksKubectlProviderframeworkonEvent0A8334C7Arn"
     ]
    },
    "ClusterName": {
     "Ref": "daedaluscluster58344A8D"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "daedalusclusterCreationRoleF03E6791",
      "Arn"
     ]
    },
    "Release": "aws-load-balancer-controller",
    "Chart": "aws-load-balancer-controller",
    "Version": "1.5.0",
    "Wait": true,
    "Timeout": "900s",
    "Values": {
     "Fn::Join": [
      "",
      [
       "{\"clusterName\":\"",
       {
        "Ref": "daedaluscluster58344A8D"
       },
       "\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"},\"region\":\"ap-northeast-1\",\"vpcId\":\"",
       {
        "Fn::ImportValue": "DaedalusNetworkStack:ExportsOutputRefdaedalusvpc6EC2CB49A2DBA358"
       },
       "\",\"image\":{\"repository\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-load-balancer-controller\",\"tag\":\"v2.5.0\"}}"
      ]
     ]
    },
    "Namespace": "kube-system",
    "Repository": "https://aws.github.io/eks-charts",
    "CreateNamespace": true
   },
   "DependsOn": [
    "daedalusclusteralbcontrolleralbsaConditionJson66A86DA4",
    "daedalusclusteralbcontrolleralbsamanifestalbsaServiceAccountResourceE6C947CA",
    "daedalusclusteralbcontrolleralbsaRoleDefaultPolicyDE1644B1",
    "daedalusclusteralbcontrolleralbsaRoleCEFEFCEF",
    "daedalusclusterAwsAuthmanifest3B26FEF7",
    "daedalusclusterKubectlReadyBarrierEA92B5A9",
    "daedalusclusterNodegroupdaedalusclusternodegroupFDBB185A",
    "daedalusclusterOpenIdConnectProviderE29A9BB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/daedalus-cluster-albcontroller/Resource/Resource/Default"
   }
  },
  "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Resource": "*",
         "Action": [
          "iam:CreateOpenIDConnectProvider",
          "iam:DeleteOpenIDConnectProvider",
          "iam:UpdateOpenIDConnectProviderThumbprint",
          "iam:AddClientIDToOpenIDConnectProvider",
          "iam:RemoveClientIDFromOpenIDConnectProvider"
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role"
   }
  },
  "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-869229378759-ap-northeast-1",
     "S3Key": "a3f66c60067b06b5d9d00094e9e817ee39dd7cb5c315c8c254f5f3c571959ce5.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler",
    "aws:asset:path": "asset.a3f66c60067b06b5d9d00094e9e817ee39dd7cb5c315c8c254f5f3c571959ce5",
    "aws:asset:property": "Code"
   }
  },
  "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Role"
   }
  },
  "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-869229378759-ap-northeast-1",
     "S3Key": "f7fc8760e0f3c8e0059c1fb08137d328a5e548dac0a4ba7927fae7839b92ea12.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
   ],
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler",
    "aws:asset:path": "asset.f7fc8760e0f3c8e0059c1fb08137d328a5e548dac0a4ba7927fae7839b92ea12",
    "aws:asset:property": "Code"
   }
  },
  "eksadminrole7E2DE206": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::869229378759:root"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "eks-admin-role"
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/eks-admin-role/Resource"
   }
  },
  "eksadminroleDefaultPolicy20729CBF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "eks:AccessKubernetesApi",
        "eks:Describe*",
        "eks:List*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "daedaluscluster58344A8D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "eksadminroleDefaultPolicy20729CBF",
    "Roles": [
     {
      "Ref": "eksadminrole7E2DE206"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/eks-admin-role/DefaultPolicy/Resource"
   }
  },
  "AdminDefaultPolicyB99EA115": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "Groups": [
     "Admin"
    ],
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "eksadminrole7E2DE206",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminDefaultPolicyB99EA115"
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/Admin/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQ0W6DMAz8lr6HbK22SXtEPKzbtLWiHzBBcKlLSFDsUFWIf5+hmliffHeJznfe6Ndn/bgqLpSYqkkslno4cGEaJdLPAA3pIbORGIL69hXUwcdOZUe3kPRCaeST+owlBAcM9FU4PAKx2nXg3qvMOweG98H3WIlPakuROHhrhR0g9GggNcZHx2oLts1OReBRYdHqIfcWpn3z3HuL5jrRGxoVmI0EBhMD8vXtL9ydMI4qB/IxGDGSJr5dqPj+w5KqQkbvJrKL3EWe3eZ7CPig6enOYilFBCw/a3T1qJxcR5/poV8/6fWLXq/OhJgEKYgt6Pw2fwEVEJJffAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DaedalusClusterStack/CDKMetadata/Default"
   }
  }
 },
 "Conditions": {
  "daedalusclusterHasEcrPublicDAFD3D37": {
   "Fn::Equals": [
    {
     "Ref": "AWS::Partition"
    },
    "aws"
   ]
  }
 },
 "Outputs": {
  "daedalusclusterClusterName0C88E364": {
   "Value": {
    "Ref": "daedaluscluster58344A8D"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}