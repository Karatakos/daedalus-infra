"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("aws-cdk-lib");
const ec2 = require("aws-cdk-lib/aws-ec2");
class NetworkStack extends cdk.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        this.vpcCidr = '10.0.0.0/16';
        this.privateSubnetCidr = '10.0.1.0/24';
        this.publicSubnetCidr = '10.0.2.0/24';
        const vpc = new ec2.Vpc(scope, "dungen-backend-vpc", {
            ipAddresses: ec2.IpAddresses.cidr(this.vpcCidr)
        });
        const privateSubnet = new ec2.Subnet(scope, "dungen-backend-privatesubnet", {
            vpcId: vpc.vpcId,
            availabilityZone: cdk.Fn.getAzs()[0],
            cidrBlock: this.privateSubnetCidr
        });
        const publicSubnet = new ec2.Subnet(scope, "dungen-backend-publicsubnet", {
            vpcId: vpc.vpcId,
            availabilityZone: cdk.Fn.getAzs()[0],
            cidrBlock: this.publicSubnetCidr
        });
        const igw = new ec2.CfnInternetGateway(scope, "dungen-backend-igw");
        const igwAttach = new ec2.CfnVPCGatewayAttachment(scope, "dungen-backend-igw-attach", {
            vpcId: vpc.vpcId,
            internetGatewayId: igw.ref
        });
        const routeTable = new ec2.CfnRouteTable(scope, "dungen-backend-routetable", {
            vpcId: vpc.vpcId
        });
        const igwRoute = new ec2.CfnRoute(this, "dungen-backend-igw-route", {
            routeTableId: routeTable.ref,
            destinationCidrBlock: "0.0.0.0/0",
            gatewayId: igw.ref // Route through our VPC's igw
        });
        const publicRouteAss = new ec2.CfnSubnetRouteTableAssociation(this, "dungen-backend-publicsubnet-route", {
            routeTableId: routeTable.ref,
            subnetId: publicSubnet.subnetId
        });
        cdk.Tags.of(vpc).add("application", "dungen-backend");
        cdk.Tags.of(privateSubnet).add("application", "dungen-backend");
        cdk.Tags.of(publicSubnet).add("application", "dungen-backend");
        cdk.Tags.of(igw).add("application", "dungen-backend");
        cdk.Tags.of(igwAttach).add("application", "dungen-backend");
        cdk.Tags.of(igwRoute).add("application", "dungen-backend");
        cdk.Tags.of(routeTable).add("application", "dungen-backend");
        cdk.Tags.of(publicRouteAss).add("application", "dungen-backend");
    }
}
exports.default = NetworkStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29yay1zdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9uZXR3b3JrLXN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQW1DO0FBQ25DLDJDQUEyQztBQUkzQyxNQUFNLFlBQWEsU0FBUSxHQUFHLENBQUMsS0FBSztJQVNoQyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQXNCO1FBQzVELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBTG5CLFlBQU8sR0FBVyxhQUFhLENBQUM7UUFDaEMsc0JBQWlCLEdBQVcsYUFBYSxDQUFDO1FBQzFDLHFCQUFnQixHQUFXLGFBQWEsQ0FBQTtRQUs3QyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLG9CQUFvQixFQUFFO1lBQ2pELFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ2xELENBQUMsQ0FBQztRQUVILE1BQU0sYUFBYSxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsOEJBQThCLEVBQUU7WUFDeEUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxLQUFLO1lBQ2hCLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLFNBQVMsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1NBQ3BDLENBQUMsQ0FBQztRQUVILE1BQU0sWUFBWSxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsNkJBQTZCLEVBQUU7WUFDdEUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxLQUFLO1lBQ2hCLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLFNBQVMsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ25DLENBQUMsQ0FBQztRQUVILE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLGtCQUFrQixDQUFDLEtBQUssRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBRXBFLE1BQU0sU0FBUyxHQUFHLElBQUksR0FBRyxDQUFDLHVCQUF1QixDQUFDLEtBQUssRUFBRSwyQkFBMkIsRUFBRTtZQUNsRixLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUs7WUFDaEIsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLEdBQUc7U0FDN0IsQ0FBQyxDQUFDO1FBRUgsTUFBTSxVQUFVLEdBQUcsSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSwyQkFBMkIsRUFBRTtZQUN6RSxLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUs7U0FDbkIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxRQUFRLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSwwQkFBMEIsRUFBRTtZQUNoRSxZQUFZLEVBQUUsVUFBVSxDQUFDLEdBQUc7WUFDNUIsb0JBQW9CLEVBQUUsV0FBVztZQUNqQyxTQUFTLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBa0IsOEJBQThCO1NBQ3JFLENBQUMsQ0FBQztRQUVILE1BQU0sY0FBYyxHQUFHLElBQUksR0FBRyxDQUFDLDhCQUE4QixDQUFDLElBQUksRUFBRSxtQ0FBbUMsRUFBRTtZQUNyRyxZQUFZLEVBQUUsVUFBVSxDQUFDLEdBQUc7WUFDNUIsUUFBUSxFQUFFLFlBQVksQ0FBQyxRQUFRO1NBQ2xDLENBQUMsQ0FBQztRQUVILEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUN0RCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDaEUsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQy9ELEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUN0RCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDNUQsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQzNELEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUM3RCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDckUsQ0FBQztDQUNKO0FBRUQsa0JBQWUsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCAqIGFzIGVjMiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWMyJztcblxuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XG5cbmNsYXNzIE5ldHdvcmtTdGFjayBleHRlbmRzIGNkay5TdGFjayB7XG4gICAgdnBjOiBlYzIuSVZwYztcbiAgICBwdWJsaWNTdWJuZXQ6IGVjMi5TdWJuZXQ7XG4gICAgcHJpdmF0ZVN1Ym5ldDogZWMyLlN1Ym5ldDtcbiAgICBcbiAgICByZWFkb25seSB2cGNDaWRyOiBzdHJpbmcgPSAnMTAuMC4wLjAvMTYnO1xuICAgIHJlYWRvbmx5IHByaXZhdGVTdWJuZXRDaWRyOiBzdHJpbmcgPSAnMTAuMC4xLjAvMjQnO1xuICAgIHJlYWRvbmx5IHB1YmxpY1N1Ym5ldENpZHI6IHN0cmluZyA9ICcxMC4wLjIuMC8yNCdcblxuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzPzogY2RrLlN0YWNrUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCB2cGMgPSBuZXcgZWMyLlZwYyhzY29wZSwgXCJkdW5nZW4tYmFja2VuZC12cGNcIiwge1xuICAgICAgICAgICAgaXBBZGRyZXNzZXM6IGVjMi5JcEFkZHJlc3Nlcy5jaWRyKHRoaXMudnBjQ2lkcilcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgcHJpdmF0ZVN1Ym5ldCA9IG5ldyBlYzIuU3VibmV0KHNjb3BlLCBcImR1bmdlbi1iYWNrZW5kLXByaXZhdGVzdWJuZXRcIiwge1xuICAgICAgICAgICAgdnBjSWQ6IHZwYy52cGNJZCxcbiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IGNkay5Gbi5nZXRBenMoKVswXSxcbiAgICAgICAgICAgIGNpZHJCbG9jazogdGhpcy5wcml2YXRlU3VibmV0Q2lkclxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBwdWJsaWNTdWJuZXQgPSBuZXcgZWMyLlN1Ym5ldChzY29wZSwgXCJkdW5nZW4tYmFja2VuZC1wdWJsaWNzdWJuZXRcIiwge1xuICAgICAgICAgICAgdnBjSWQ6IHZwYy52cGNJZCxcbiAgICAgICAgICAgIGF2YWlsYWJpbGl0eVpvbmU6IGNkay5Gbi5nZXRBenMoKVswXSxcbiAgICAgICAgICAgIGNpZHJCbG9jazogdGhpcy5wdWJsaWNTdWJuZXRDaWRyXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGlndyA9IG5ldyBlYzIuQ2ZuSW50ZXJuZXRHYXRld2F5KHNjb3BlLCBcImR1bmdlbi1iYWNrZW5kLWlnd1wiKTtcblxuICAgICAgICBjb25zdCBpZ3dBdHRhY2ggPSBuZXcgZWMyLkNmblZQQ0dhdGV3YXlBdHRhY2htZW50KHNjb3BlLCBcImR1bmdlbi1iYWNrZW5kLWlndy1hdHRhY2hcIiwge1xuICAgICAgICAgICAgdnBjSWQ6IHZwYy52cGNJZCxcbiAgICAgICAgICAgIGludGVybmV0R2F0ZXdheUlkOiBpZ3cucmVmXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IHJvdXRlVGFibGUgPSBuZXcgZWMyLkNmblJvdXRlVGFibGUoc2NvcGUsIFwiZHVuZ2VuLWJhY2tlbmQtcm91dGV0YWJsZVwiLCB7XG4gICAgICAgICAgICB2cGNJZDogdnBjLnZwY0lkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGlnd1JvdXRlID0gbmV3IGVjMi5DZm5Sb3V0ZSh0aGlzLCBcImR1bmdlbi1iYWNrZW5kLWlndy1yb3V0ZVwiLCB7XG4gICAgICAgICAgICByb3V0ZVRhYmxlSWQ6IHJvdXRlVGFibGUucmVmLFxuICAgICAgICAgICAgZGVzdGluYXRpb25DaWRyQmxvY2s6IFwiMC4wLjAuMC8wXCIsICAvLyBBbnl3aGVyZSBwdWJsaWNcbiAgICAgICAgICAgIGdhdGV3YXlJZDogaWd3LnJlZiAgICAgICAgICAgICAgICAgIC8vIFJvdXRlIHRocm91Z2ggb3VyIFZQQydzIGlnd1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBwdWJsaWNSb3V0ZUFzcyA9IG5ldyBlYzIuQ2ZuU3VibmV0Um91dGVUYWJsZUFzc29jaWF0aW9uKHRoaXMsIFwiZHVuZ2VuLWJhY2tlbmQtcHVibGljc3VibmV0LXJvdXRlXCIsIHtcbiAgICAgICAgICAgIHJvdXRlVGFibGVJZDogcm91dGVUYWJsZS5yZWYsXG4gICAgICAgICAgICBzdWJuZXRJZDogcHVibGljU3VibmV0LnN1Ym5ldElkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNkay5UYWdzLm9mKHZwYykuYWRkKFwiYXBwbGljYXRpb25cIiwgXCJkdW5nZW4tYmFja2VuZFwiKTtcbiAgICAgICAgY2RrLlRhZ3Mub2YocHJpdmF0ZVN1Ym5ldCkuYWRkKFwiYXBwbGljYXRpb25cIiwgXCJkdW5nZW4tYmFja2VuZFwiKTtcbiAgICAgICAgY2RrLlRhZ3Mub2YocHVibGljU3VibmV0KS5hZGQoXCJhcHBsaWNhdGlvblwiLCBcImR1bmdlbi1iYWNrZW5kXCIpO1xuICAgICAgICBjZGsuVGFncy5vZihpZ3cpLmFkZChcImFwcGxpY2F0aW9uXCIsIFwiZHVuZ2VuLWJhY2tlbmRcIik7XG4gICAgICAgIGNkay5UYWdzLm9mKGlnd0F0dGFjaCkuYWRkKFwiYXBwbGljYXRpb25cIiwgXCJkdW5nZW4tYmFja2VuZFwiKTtcbiAgICAgICAgY2RrLlRhZ3Mub2YoaWd3Um91dGUpLmFkZChcImFwcGxpY2F0aW9uXCIsIFwiZHVuZ2VuLWJhY2tlbmRcIik7XG4gICAgICAgIGNkay5UYWdzLm9mKHJvdXRlVGFibGUpLmFkZChcImFwcGxpY2F0aW9uXCIsIFwiZHVuZ2VuLWJhY2tlbmRcIik7XG4gICAgICAgIGNkay5UYWdzLm9mKHB1YmxpY1JvdXRlQXNzKS5hZGQoXCJhcHBsaWNhdGlvblwiLCBcImR1bmdlbi1iYWNrZW5kXCIpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTmV0d29ya1N0YWNrOyJdfQ==